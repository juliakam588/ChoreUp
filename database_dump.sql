-- This script was generated by the ERD tool in pgAdmin 4.
-- Please log an issue at https://github.com/pgadmin-org/pgadmin4/issues/new/choose if you find any bugs, including reproduction steps.
BEGIN;


CREATE TABLE IF NOT EXISTS public.chore_settings
(
    id integer NOT NULL GENERATED ALWAYS AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ),
    chore_id integer NOT NULL,
    times_in_a_week integer DEFAULT 1,
    duration integer DEFAULT 15,
    household_id integer NOT NULL,
    CONSTRAINT chore_settings_pkey PRIMARY KEY (id)
    );

CREATE TABLE IF NOT EXISTS public.chore_status
(
    id integer NOT NULL GENERATED ALWAYS AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ),
    description character varying COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT "choreStatus_pkey" PRIMARY KEY (id)
    );

CREATE TABLE IF NOT EXISTS public.chores
(
    id integer NOT NULL GENERATED ALWAYS AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ),
    name character varying COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT chores_pkey PRIMARY KEY (id)
    );

CREATE TABLE IF NOT EXISTS public.households
(
    id integer NOT NULL GENERATED ALWAYS AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ),
    code character varying COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT households_pkey PRIMARY KEY (id)
    );

CREATE TABLE IF NOT EXISTS public.roles
(
    id integer NOT NULL GENERATED ALWAYS AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ),
    name character varying COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT roles_pkey PRIMARY KEY (id)
    );

CREATE TABLE IF NOT EXISTS public.schedules
(
    id integer NOT NULL DEFAULT nextval('schedules_id_seq'::regclass),
    household_id integer NOT NULL,
    start_date date NOT NULL,
    end_date date NOT NULL,
    created_at timestamp without time zone DEFAULT CURRENT_TIMESTAMP,
    CONSTRAINT schedules_pkey PRIMARY KEY (id)
    );

CREATE TABLE IF NOT EXISTS public.user_chores
(
    id integer NOT NULL GENERATED ALWAYS AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ),
    "userID" integer NOT NULL DEFAULT 0,
    "choreID" integer NOT NULL DEFAULT 0,
    "statusID" integer NOT NULL DEFAULT 0,
    "dateScheduled" date,
    schedule_id integer,
    CONSTRAINT "userChores_pkey" PRIMARY KEY (id)
    );

CREATE TABLE IF NOT EXISTS public.user_household
(
    id integer NOT NULL GENERATED ALWAYS AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ),
    "userID" integer NOT NULL DEFAULT 0,
    "householdID" integer NOT NULL DEFAULT 0,
    CONSTRAINT "userHouseholdTable_pkey" PRIMARY KEY (id)
    );

CREATE TABLE IF NOT EXISTS public.user_roles
(
    user_id integer NOT NULL,
    household_id integer NOT NULL DEFAULT 0,
    role_id integer NOT NULL DEFAULT 0,
    CONSTRAINT user_roles_pkey PRIMARY KEY (user_id, household_id)
    );

CREATE TABLE IF NOT EXISTS public.users
(
    id integer NOT NULL GENERATED ALWAYS AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ),
    email character varying COLLATE pg_catalog."default" NOT NULL,
    password character varying COLLATE pg_catalog."default" NOT NULL,
    id_user_details integer NOT NULL DEFAULT 0,
    CONSTRAINT users_pkey PRIMARY KEY (id)
    );

CREATE TABLE IF NOT EXISTS public.users_details
(
    id integer NOT NULL GENERATED ALWAYS AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ),
    name character varying COLLATE pg_catalog."default" NOT NULL,
    photo character varying COLLATE pg_catalog."default",
    CONSTRAINT users_details_pkey PRIMARY KEY (id)
    );

ALTER TABLE IF EXISTS public.chore_settings
    ADD CONSTRAINT chore_settings_chore_id_fkey FOREIGN KEY (chore_id)
    REFERENCES public.chores (id) MATCH SIMPLE
    ON UPDATE CASCADE
       ON DELETE CASCADE;


ALTER TABLE IF EXISTS public.chore_settings
    ADD CONSTRAINT chore_settings_household_id_fkey FOREIGN KEY (household_id)
    REFERENCES public.households (id) MATCH SIMPLE
    ON UPDATE CASCADE
       ON DELETE CASCADE;


ALTER TABLE IF EXISTS public.schedules
    ADD CONSTRAINT schedules_household_id_fkey FOREIGN KEY (household_id)
    REFERENCES public.households (id) MATCH SIMPLE
    ON UPDATE CASCADE
       ON DELETE CASCADE;


ALTER TABLE IF EXISTS public.user_chores
    ADD CONSTRAINT "choreID" FOREIGN KEY ("choreID")
    REFERENCES public.chores (id) MATCH SIMPLE
    ON UPDATE CASCADE
       ON DELETE CASCADE;


ALTER TABLE IF EXISTS public.user_chores
    ADD CONSTRAINT "statusID" FOREIGN KEY ("statusID")
    REFERENCES public.chore_status (id) MATCH SIMPLE
    ON UPDATE CASCADE
       ON DELETE CASCADE;


ALTER TABLE IF EXISTS public.user_chores
    ADD CONSTRAINT "userChores_userID_fkey" FOREIGN KEY ("userID")
    REFERENCES public.users (id) MATCH SIMPLE
    ON UPDATE CASCADE
       ON DELETE CASCADE;


ALTER TABLE IF EXISTS public.user_chores
    ADD CONSTRAINT user_chores_schedule_id_fkey FOREIGN KEY (schedule_id)
    REFERENCES public.schedules (id) MATCH SIMPLE
    ON UPDATE CASCADE
       ON DELETE CASCADE;


ALTER TABLE IF EXISTS public.user_household
    ADD CONSTRAINT "householdID" FOREIGN KEY ("householdID")
    REFERENCES public.households (id) MATCH SIMPLE
    ON UPDATE CASCADE
       ON DELETE CASCADE;


ALTER TABLE IF EXISTS public.user_household
    ADD CONSTRAINT "userHouseholdTable_userID_fkey" FOREIGN KEY ("userID")
    REFERENCES public.users (id) MATCH SIMPLE
    ON UPDATE CASCADE
       ON DELETE CASCADE;


ALTER TABLE IF EXISTS public.user_roles
    ADD CONSTRAINT user_roles_household_id_fkey FOREIGN KEY (household_id)
    REFERENCES public.households (id) MATCH SIMPLE
    ON UPDATE CASCADE
       ON DELETE CASCADE;


ALTER TABLE IF EXISTS public.user_roles
    ADD CONSTRAINT user_roles_role_id_fkey FOREIGN KEY (role_id)
    REFERENCES public.roles (id) MATCH SIMPLE
    ON UPDATE CASCADE
       ON DELETE CASCADE;


ALTER TABLE IF EXISTS public.user_roles
    ADD CONSTRAINT user_roles_user_id_fkey FOREIGN KEY (user_id)
    REFERENCES public.users (id) MATCH SIMPLE
    ON UPDATE CASCADE
       ON DELETE CASCADE;


ALTER TABLE IF EXISTS public.users
    ADD CONSTRAINT users_id_user_details_fkey FOREIGN KEY (id_user_details)
    REFERENCES public.users_details (id) MATCH SIMPLE
    ON UPDATE CASCADE
       ON DELETE CASCADE;

END;